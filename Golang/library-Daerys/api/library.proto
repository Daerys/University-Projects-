syntax = "proto3";

package library;

option go_package = "github.com/Go-CT-ITMO/library-daerys/api/library;library";

import "google/api/annotations.proto"; // Импорт для HTTP-аннотаций

service Library {
  // Добавление книги
  rpc AddBook(AddBookRequest) returns (AddBookResponse) {
    option (google.api.http) = {
      post: "/v1/library/book" // POST-запрос для добавления книги
      body: "*"                // Тело запроса передаётся полностью
    };
  }

  // Обновление книги
  rpc UpdateBook(UpdateBookRequest) returns (UpdateBookResponse) {
    option (google.api.http) = {
      put: "/v1/library/book/{id}" // PUT-запрос для обновления книги
      body: "*"                    // Тело запроса передаётся полностью
    };
  }

  // Получение информации о книге
  rpc GetBookInfo(GetBookInfoRequest) returns (GetBookInfoResponse) {
    option (google.api.http) = {
      get: "/v1/library/book/{id}" // GET-запрос для получения информации о книге
    };
  }

  // Регистрация автора
  rpc RegisterAuthor(RegisterAuthorRequest) returns (RegisterAuthorResponse) {
    option (google.api.http) = {
      post: "/v1/library/author" // POST-запрос для регистрации автора
      body: "*"                  // Тело запроса передаётся полностью
    };
  }

  // Изменение информации об авторе
  rpc ChangeAuthorInfo(ChangeAuthorInfoRequest) returns (ChangeAuthorInfoResponse) {
    option (google.api.http) = {
      put: "/v1/library/author/{id}" // PUT-запрос для изменения информации об авторе
      body: "*"                      // Тело запроса передаётся полностью
    };
  }

  // Получение информации об авторе
  rpc GetAuthorInfo(GetAuthorInfoRequest) returns (GetAuthorInfoResponse) {
    option (google.api.http) = {
      get: "/v1/library/author_info/{id}" // GET-запрос для получения информации об авторе
    };
  }

  // Получение списка книг автора (stream)
  rpc GetAuthorBooks(GetAuthorBooksRequest) returns (stream Book) {
    option (google.api.http) = {
      get: "/v1/library/author/{author_id}/books" // GET-запрос для получения книг автора
    };
  }
}

message Book {
  string id = 1;
  string name = 2;
  repeated string author_id = 3;
}

message AddBookRequest {
  string name = 1;
  repeated string author_id = 2;
}

message AddBookResponse {
  Book book = 1;
}

message UpdateBookRequest {
  string id = 1;
  string name = 2;
}

message UpdateBookResponse {}

message GetBookInfoRequest {
  string id = 1;
}

message GetBookInfoResponse {
  Book book = 1;
}

message RegisterAuthorRequest {
  string name = 1;
}

message RegisterAuthorResponse {
  string id = 1;
}

message ChangeAuthorInfoRequest {
  string id = 1;
  string name = 2;
}

message ChangeAuthorInfoResponse {}

message GetAuthorInfoRequest {
  string id = 1;
}

message GetAuthorInfoResponse {
  string id = 1;
  string name = 2;
}

message GetAuthorBooksRequest {
  string author_id = 1;
}
